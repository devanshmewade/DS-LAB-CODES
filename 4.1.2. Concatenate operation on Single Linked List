typedef struct node {
    int data;
    struct node *next;
} Node;

typedef Node* NODE;

// Function to add a node at the end of the list
NODE addNode(NODE head, int data) {
    NODE newNode = (NODE)malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = NULL;
   
    if (head == NULL) {
        head = newNode;
    } else {
        NODE temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newNode;
    }
    return head;
}

// Function to display the list
void displayList(NODE head) {
    NODE temp = head;
    while (temp != NULL) {
        printf("%d --> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

// Function to concatenate two lists: attaches list2 at the end of list1
NODE concatenate(NODE list1, NODE list2) {
    if (list1 == NULL)
        return list2;
   
    NODE temp = list1;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = list2;
    return list1;
}
